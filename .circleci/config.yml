version: 2.1

orbs:
  codecov: codecov/codecov@5

executors:
  c-executor:
    docker:
      - image: gcc:latest
    working_directory: ~/project

jobs:
  build-linux:
    executor: c-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            apt-get update
            apt-get install -y make cmake gdb
      - run:
          name: Configure project
          command: cmake -DCMAKE_BUILD_TYPE=Debug -DTARGET_PLATFORM=linux -DPERFORM_UNIT_TESTS=true -DCOMPILE_TEST_APP=false -Bbuild -G"Unix Makefiles" .
      - run:
          name: Build project
          command: cd build && make
      - persist_to_workspace:
          root: .
          paths:
            - build

  test-linux:
    executor: c-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: Install test dependencies
          command: |
            apt-get update
            apt-get install -y cmake valgrind
      - run:
          name: Run tests
          command: cd build && ctest --output-junit test.xml && ctest -T Coverage
      - store_test_results:
            path: build/test.xml
      - codecov/upload
      - run:
          name: Run valgrind
          command: |
            cd build
            set +e
            valgrind --leak-check=full ./test/pal_osal_test 2> valgrind.log
            set -e
            cat valgrind.log

            # Cerca errori seri
            if grep -E "definitely lost: [^0]|Invalid free|Invalid read|Invalid write" valgrind.log; then
              echo "❌ Valgrind found serious memory issues!"
              exit 1
            else
              echo "✅ No critical Valgrind issues detected."
            fi
      - store_artifacts:
          path: build/valgrind.log

workflows:
  version: 2
  build-and-test:
    jobs:
      - build-linux
      - test-linux:
          requires:
            - build-linux